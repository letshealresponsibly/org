{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","Container","Row","href","class","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4PAiHeA,E,YAxGb,WAAYC,GAAQ,qEACZA,I,sEAIN,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sDACA,wGACA,mGAAwE,uBAAGC,KAAK,8CAAR,sCAAxE,MAEF,6BACA,kBAACD,EAAA,EAAD,KACE,uCACA,0LAEF,kBAACA,EAAA,EAAD,KACE,6CAEF,kBAACA,EAAA,EAAD,KACE,4BACE,kJACA,sLACA,+HAGJ,kBAACA,EAAA,EAAD,KACE,iDAEF,kBAACA,EAAA,EAAD,KACE,4BACE,4BACE,4CAEF,mJACsH,6CADtH,sCACmL,6BACjL,0BAAME,MAAM,cAAZ,mMAGJ,4BACE,4BACE,2CAEF,mJACsH,oDADtH,uBAC2K,6BACzK,0BAAMA,MAAM,cAAZ,0HAGJ,4BACE,4BACE,yCAEF,qHACwF,mDADxF,iBACsI,6BACpI,0BAAMA,MAAM,cAAZ,4HAIN,kBAACF,EAAA,EAAD,KACE,0DAEF,kBAACA,EAAA,EAAD,KACE,4BACE,mJACA,yIACE,4BACE,+CACA,uDACA,iFAKR,kBAACA,EAAA,EAAD,KACE,8EAEF,kBAACA,EAAA,EAAD,KACE,4BACE,8JACA,sIACA,sJACA,kOAGJ,kBAACA,EAAA,EAAD,KACE,wDAEF,kBAACA,EAAA,EAAD,KACE,4BACE,oMACA,sHACA,iHACA,8GACA,4BACE,uBAAGC,KAAK,8CAAR,yCADF,4D,GAhGME,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.36bd3d0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n//const AuthenticatedApp = React.lazy(() => import('./authenticated-app'))\n//const UnauthenticatedApp = React.lazy(() => import('./unauthenticated-app'))\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <h1>let's heal responsibly</h1>\n          <h2>a public, transparent and anonymised contact tracing system for covid 19</h2>\n          <p>for more information on contact tracing technology and systems, see: <a href=\"https://wikipedia.org/wiki/Contact_tracing\">wikipedia.org/wiki/Contact_tracing</a>.</p>\n        </Row>\n        <hr />\n        <Row>\n          <h3>mission</h3>\n          <p>provide a simple mechanism to discover if an individual has been exposed to covid 19 through contact with an exposed person, location or mode of transport</p>\n        </Row>\n        <Row>\n          <h3>how it works</h3>\n        </Row>\n        <Row>\n          <ul>\n            <li>add places you have visited or shared transport you have used, to your personal and strictly confidential profile.</li>\n            <li>get notified if or when one or more of the locations you have visited or transport you have used, has been identified as a contact point for covid 19.</li>\n            <li>update your profile if you experience covid 19 symptoms or if you test positive for covid 19.</li>\n          </ul>\n        </Row>\n        <Row>\n          <h3>contact severity</h3>\n        </Row>\n        <Row>\n          <dl>\n            <dt>\n              <h4>yellow flag</h4>\n            </dt>\n            <dd>\n              close proximity contact with a person, mode of travel or location which has been identified and disclosed as having <strong>suspected</strong> symptoms associated with covid 19.<br />\n              <span class=\"text-muted\">persons in this category should consider their own health and determine whether they have exhibited symptoms associated with covid 19 and take appropriate action to receive care or testing.</span>\n            </dd>\n          </dl>\n          <dl>\n            <dt>\n              <h4>amber flag</h4>\n            </dt>\n            <dd>\n              close proximity contact with a person, mode of travel or location which has been identified and disclosed as having <strong>had contact with</strong> a red flag contact.<br />\n              <span class=\"text-muted\">persons in this category should consider self isolation and follow national guidelines for quarantine and reporting.</span>\n            </dd>\n          </dl>\n          <dl>\n            <dt>\n              <h4>red flag</h4>\n            </dt>\n            <dd>\n              close proximity contact with a person who has been identified and disclosed as having <strong>tested positive</strong> for covid 19.<br />\n              <span class=\"text-muted\">persons in this category should immediately self isolate and follow national guidelines for quarantine and reporting.</span>\n            </dd>\n          </dl>\n        </Row>\n        <Row>\n          <h3>how is privacy protected?</h3>\n        </Row>\n        <Row>\n          <ul>\n            <li>no details of any specific persons identity, whereabouts, travel or exposure will be disclosed to any other person.</li>\n            <li>no details of contact relating to any specific location or mode of transport will be disclosed, except to:\n              <ul>\n                <li>law enforcement</li>\n                <li>public health officials</li>\n                <li>the location or transport-provider management</li>\n              </ul>\n            </li>\n          </ul>\n        </Row>\n        <Row>\n          <h3>how is the contact tracing system implemented</h3>\n        </Row>\n        <Row>\n          <ul>\n            <li>individuals disclose their own location history which is recorded in a central database against that individuals user account.</li>\n            <li>individuals disclose their own health status (one of: healthy, suspected-symptoms or tested-positive).</li>\n            <li>individuals are notified if their location history intersects with a contact and what the severity of the contact was.</li>\n            <li>no details about the individual, location or transport is disclosed when a contact is identified. only that a contact has been identified and what severity (yellow, amber, red) was identified.</li>\n          </ul>\n        </Row>\n        <Row>\n          <h3>what technology is used</h3>\n        </Row>\n        <Row>\n          <ul>\n            <li>oauth authentication identifies individual users using their google, facebook or apple id. a simple username/password can also be used where a user elects to do so.</li>\n            <li>an atlas mongo database cluster is used to store user location and health disclosures.</li>\n            <li>a react application serves as a web portal for user interactions and disclosures.</li>\n            <li>contribution towards rapid development of this application is actively sought.</li>\n            <li>\n              <a href=\"https://github.com/letshealresponsibly/org\">source code for the react application</a> is open source and released under an MIT license\n            </li>\n          </ul>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}